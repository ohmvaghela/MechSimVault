apiVersion: apps/v1
kind: Deployment
metadata:
  name: mech-server-deployment
  namespace: mech-server
  labels:
    app: mech-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mech-server
  template:
    metadata:
      labels:
        app: mech-server
    spec:
      containers:
      - name: mech-server
        image: ohmv10/mech-server:allhost.v21
        ports:
        - containerPort: 8000
        env:
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: mech-server-secret
              key: SECRET_KEY
        - name: DEBUG
          valueFrom:
            configMapKeyRef:
              name: mech-server-config
              key: DEBUG
        - name: ALLOWED_HOSTS
          valueFrom:
            configMapKeyRef:
              name: mech-server-config
              key: ALLOWED_HOSTS
        - name: DATABASE_URL
          valueFrom:
            configMapKeyRef:
              name: mech-server-config
              key: DATABASE_URL
        - name: CORS_ALLOWED_ORIGINS
          valueFrom:
            configMapKeyRef:
              name: mech-server-config
              key: CORS_ALLOWED_ORIGINS
        - name: MYSQL_DATABASE
          value: mech_sim_db
        - name: MYSQL_USER
          value: mechsimvault-server
        - name: MYSQL_PASSWORD
          value: Ohm@42@42@42@
        - name: MYSQL_HOST
          value: mysql-service
        - name: MYSQL_PORT
          value: "3306"
        command: ["sh","/MechSimVault/container-entrypoint.sh"]
        volumeMounts: 
        - name: django-media-pvc
          mountPath: /media
      volumes:
        - name: django-media-pvc
          persistentVolumeClaim:
            claimName: django-media-pvc
---

apiVersion: v1
kind: Service
metadata:
  name: mech-server-service
  namespace: mech-server
spec:
  selector:
    app: mech-server
  # type: LoadBalancer
  type: NodePort
  ports:
    - protocol: TCP
      port: 8000
      targetPort: 8000



